{"version":3,"sources":["components/Button/Button.js","components/Button/Section/Section.js","components/Button/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/Button/Button.module.css"],"names":["Button","option","onLeaveFeedback","className","btn","onClick","Section","props","title","children","Statistics","good","neutral","bad","total","percentage","Notification","message","checkFeedback","App","state","element","setState","countTotalFeedback","countPositiveFeedbackPercentage","Number","toFixed","Object","keys","this","map","el","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"sQAoBeA,EAhBA,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,gBAExB,OACE,mCACE,wBAAQC,UAAWC,MAAKC,QAAS,kBAAMH,EAAgBD,IAAvD,SACGA,OCQMK,EAdC,SAACC,GAAW,IAClBC,EAAUD,EAAVC,MACR,OACE,gCACE,6BAAKA,IACJD,EAAME,aCeEC,EApBI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC/C,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,EAAX,OACA,oDAAuBC,EAAvB,YCISC,EAXM,SAACT,GAAW,IACvBU,EAAYV,EAAZU,QACFC,EAAgBX,EAAME,SAASF,MAAMO,MAE3C,OAAO,8BAAwB,IAAlBI,EAAsB,4BAAID,IAAeV,EAAME,YCyC/CU,E,4MAzCbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPX,gBAAkB,SAACmB,GACjB,EAAKC,SAAL,eAAiBD,EAAU,EAAKD,MAAMC,GAAW,K,EAGnDE,mBAAqB,WAEnB,OADc,EAAKH,MAAMT,KAAO,EAAKS,MAAMR,QAAU,EAAKQ,MAAMP,K,EAIlEW,gCAAkC,WAEhC,OADmBC,OAAqC,IAA9B,EAAKF,qBAA6B,GAAM,EAAKH,MAAMT,KAAO,EAAKY,qBAAwB,KAAKG,QAAQ,K,4CAIhI,WAAU,IAAD,OACDzB,EAAS0B,OAAOC,KAAKC,KAAKT,OADzB,EAEwBS,KAAKT,MAA5BT,EAFD,EAECA,KAAMC,EAFP,EAEOA,QAASC,EAFhB,EAEgBA,IACvB,OACE,qCACE,cAAC,EAAD,CAASL,MAAM,wBAAf,SACGP,EAAO6B,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,CAAiB9B,OAAQ8B,EAAI7B,gBAAiB,EAAKA,iBAAtC6B,QAIjB,cAAC,EAAD,CAASvB,MAAM,aAAf,SACE,cAAC,EAAD,CAAcS,QAAQ,oBAAtB,SACE,cAAC,EAAD,CAAYN,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOe,KAAKN,qBAAsBR,WAAYc,KAAKL,+C,GAlCjGQ,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,IAAM,uB","file":"static/js/main.2edb44a6.chunk.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { btn } from \"./Button.module.css\"\r\n\r\nconst Button = ({ option, onLeaveFeedback }) => {\r\n  // console.log(option)\r\n  return (\r\n    <>\r\n      <button className={btn} onClick={() => onLeaveFeedback(option)}>\r\n        {option}\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n  option: PropTypes.string.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Section = (props) => {\r\n  const { title } = props\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Section\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Statistics = ({ good, neutral, bad, total, percentage }) => {\r\n  return (\r\n    <div>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total} </p>\r\n      <p>Positive Feedback: {percentage} %</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Notification = (props) => {\r\n  const { message } = props\r\n  const checkFeedback = props.children.props.total\r\n\r\n  return <div>{checkFeedback === 0 ? <p>{message}</p> : props.children}</div>\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification\r\n","import React, { Component } from \"react\"\r\nimport Button from \"./components/Button/Button\"\r\nimport Section from \"./components/Button/Section/Section\"\r\nimport Statistics from \"./components/Button/Statistics/Statistics\"\r\nimport Notification from \"./components/Notification/Notification\"\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  }\r\n\r\n  onLeaveFeedback = (element) => {\r\n    this.setState({ [element]: this.state[element] + 1 })\r\n  }\r\n\r\n  countTotalFeedback = () => {\r\n    const total = this.state.good + this.state.neutral + this.state.bad\r\n    return total\r\n  }\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const percentage = Number(this.countTotalFeedback() === 0 ? 0 : ((this.state.good / this.countTotalFeedback()) * 100).toFixed(2))\r\n    return percentage\r\n  }\r\n\r\n  render() {\r\n    const option = Object.keys(this.state)\r\n    const { good, neutral, bad } = this.state\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          {option.map((el) => (\r\n            <Button key={el} option={el} onLeaveFeedback={this.onLeaveFeedback} />\r\n          ))}\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          <Notification message=\"No feedback given\">\r\n            <Statistics good={good} neutral={neutral} bad={bad} total={this.countTotalFeedback()} percentage={this.countPositiveFeedbackPercentage()} />\r\n          </Notification>\r\n        </Section>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__NSihG\"};"],"sourceRoot":""}